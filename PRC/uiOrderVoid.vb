Imports DevExpress.Utils
Imports DevExpress.XtraGrid.Views.Grid
Imports DevExpress.XtraGrid.Views.Grid.ViewInfo

'================================================== 
' Generated by DWRAD version 1.0.0.0
' Ari Chandra
' NET.

' Created Date: 24/10/2019 09.23.51
' 

Public Class uiOrderVoid
    Private Const mUiName As String = "Form Void of Order"
    Private Const SHOW_SAVE_CONFIRMATION As Boolean = True

    Private Event FormBeforeOpenRow(ByRef id As Object)
    Private Event FormAfterOpenRow(ByRef id As Object)
    Private Event FormBeforeSave(ByRef id As Object)
    Private Event FormAfterSave(ByRef id As Object, ByVal result As FormSaveResult)
    Private Event FormBeforeNew()
    Private Event FormBeforeDelete(ByRef id As Object)
    Private Event FormAfterDelete(ByRef id As Object)

    Private FILTER_QUERY_MODE As Boolean
    Private DATA_ISLOCKED As Boolean

    Private tbl_TrnOrdervoid As DataTable = CreateTblTrnOrdervoid()
    Private tbl_TrnOrdervoid_Temp As DataTable = CreateTblTrnOrdervoid()
    Private tbl_MstUser As DataTable = clsDataset2.CreateTblMstUser()
    Private tbl_EmailBodyPathApproval As System.Data.DataTable = New System.Data.DataTable
    Private tbl_EmailBodyPathUnapproval As System.Data.DataTable = New System.Data.DataTable
    Private tbl_EmailBodyPathRejected As System.Data.DataTable = New System.Data.DataTable
    Private WebProgID As String

    Private Enum PositionType As Integer
        KaDept = 1
        KaDiv = 2
        SuperUser = 3
        Supervisor = 4
        Direktur = 5
        Staff = 6
    End Enum

#Region " Window Parameter "
    ' TODO: Buat variabel untuk menampung parameter window 
    Private _FORMMODE As String = "ENTRY"       '[ENTRY, VIEW, APPROVAL, UNAPPROVAL]
    Private _CHANNEL As String = "TAS" 'clsConfig.globDefaultChannel
    Private _ORDER_SOURCE As String = "PO"  '[PO    , MO]
    Private _ORDERTYPE_ID As String = "VO"  '[PO    , MO]
    Private _USERTYPE As String = "STAFF"  'STAFF, SPV, KADEPT, PROC
    Private _USERFULLNAME As String = "Ari Chandra"
    Private _USERSTRUKTURUNIT As Decimal = 5554
    Private _WEB_PROGRAMID As String = ""
#End Region

#Region " Window Dataset "
    Public Shared Function CreateTblTrnOrdervoid() As DataTable
        Dim tbl As DataTable = New DataTable

        tbl.Columns.Clear()
        tbl.Columns.Add(New DataColumn("ordervoid_id", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_date", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_desc", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("order_id", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("strukturunit_id", GetType(System.Decimal)))
        tbl.Columns.Add(New DataColumn("channel_id", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_createby", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_createdt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_modifiedby", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_modifieddt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved1", GetType(System.Int64)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved1by", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved1dt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved2", GetType(System.Int64)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved2by", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved2dt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved3", GetType(System.Int64)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved3by", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_approved3dt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_approvedproc", GetType(System.Int64)))
        tbl.Columns.Add(New DataColumn("ordervoid_approvedprocby", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_approvedprocdt", GetType(System.DateTime)))
        tbl.Columns.Add(New DataColumn("ordervoid_cancaled", GetType(System.Int64)))
        tbl.Columns.Add(New DataColumn("ordervoid_cancaledby", GetType(System.String)))
        tbl.Columns.Add(New DataColumn("ordervoid_cancaleddt", GetType(System.DateTime)))


        '-------------------------------
        'Default Value: 
        tbl.Columns("ordervoid_id").DefaultValue = ""
        tbl.Columns("order_id").DefaultValue = ""
        tbl.Columns("strukturunit_id").DefaultValue = 0
        tbl.Columns("channel_id").DefaultValue = ""
        tbl.Columns("ordervoid_createby").DefaultValue = ""
        tbl.Columns("ordervoid_createdt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_modifiedby").DefaultValue = ""
        tbl.Columns("ordervoid_modifieddt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_approved1").DefaultValue = 0
        tbl.Columns("ordervoid_approved1by").DefaultValue = ""
        tbl.Columns("ordervoid_approved1dt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_approved2").DefaultValue = 0
        tbl.Columns("ordervoid_approved2by").DefaultValue = ""
        tbl.Columns("ordervoid_approved2dt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_approved3").DefaultValue = 0
        tbl.Columns("ordervoid_approved3by").DefaultValue = ""
        tbl.Columns("ordervoid_approved3dt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_approvedproc").DefaultValue = 0
        tbl.Columns("ordervoid_approvedprocby").DefaultValue = ""
        tbl.Columns("ordervoid_approvedprocdt").DefaultValue = DBNull.Value
        tbl.Columns("ordervoid_cancaled").DefaultValue = 0
        tbl.Columns("ordervoid_cancaledby").DefaultValue = ""
        tbl.Columns("ordervoid_cancaleddt").DefaultValue = DBNull.Value


        Return tbl
    End Function

#End Region

#Region " Overrides "

    Public Overrides Function btnQuery_Click() As Boolean
        Me.PnlDfSearch.Visible = Not Me.PnlDfSearch.Visible
        If Me.PnlDfSearch.Visible Then
            FILTER_QUERY_MODE = True
            Me.tbtnQuery.Checked = CheckState.Checked
        Else
            FILTER_QUERY_MODE = False
            Me.tbtnQuery.Checked = CheckState.Unchecked
        End If
        Return MyBase.btnQuery_Click()
    End Function

    Public Overrides Function btnNew_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        If Me.xtabmainmenu.SelectedTabPageIndex = 0 Then
            Me.xtabmainmenu.SelectedTabPageIndex = 1
        End If
        Me.uiOrderVoid_NewData()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnNew_Click()
    End Function

    Public Overrides Function btnLoad_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Retrieve()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnLoad_Click()
    End Function

    Public Overrides Function btnSave_Click() As Boolean
        If Me.uiOrderVoid_FormError() Then
            Return True
        End If
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Save()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnSave_Click()
    End Function

    Public Overrides Function btnPrint_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Print()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnPrint_Click()
    End Function

    Public Overrides Function btnDel_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Delete()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnDel_Click()
    End Function

    Public Overrides Function btnFirst_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_First()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnFirst_Click()
    End Function

    Public Overrides Function btnPrev_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Prev()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnPrev_Click()
    End Function

    Public Overrides Function btnNext_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Next()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnNext_Click()
    End Function

    Public Overrides Function btnLast_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.uiOrderVoid_Last()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnLast_Click()
    End Function

    Public Overrides Function btnApprove_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.Approval()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnApprove_Click()
    End Function

    Public Overrides Function btnDisapprove_Click() As Boolean
        Me.Cursor = Cursors.WaitCursor
        Me.Disapproval()
        Me.Cursor = Cursors.Arrow
        Return MyBase.btnDisapprove_Click()
    End Function

#End Region

#Region " Layout & Init UI "

    Private Function FormatDgvTrnOrdervoid(ByRef objDgv As System.Windows.Forms.DataGridView) As Boolean
        ' Format DgvTrnOrdervoid Columns 
        Dim cOrdervoid_id As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_date As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_desc As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrder_id As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_createby As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_createdt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_modifiedby As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_modifieddt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved1 As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved1by As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved1dt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved2 As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved2by As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved2dt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved3 As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved3by As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approved3dt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approvedproc As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approvedprocby As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_approvedprocdt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_cancaled As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_cancaledby As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn
        Dim cOrdervoid_cancaleddt As System.Windows.Forms.DataGridViewTextBoxColumn = New System.Windows.Forms.DataGridViewTextBoxColumn

        cOrdervoid_id.Name = "ordervoid_id"
        cOrdervoid_id.HeaderText = "ordervoid_id"
        cOrdervoid_id.DataPropertyName = "ordervoid_id"
        cOrdervoid_id.Width = 100
        cOrdervoid_id.Visible = True
        cOrdervoid_id.ReadOnly = False

        cOrdervoid_date.Name = "ordervoid_date"
        cOrdervoid_date.HeaderText = "ordervoid_date"
        cOrdervoid_date.DataPropertyName = "ordervoid_date"
        cOrdervoid_date.Width = 100
        cOrdervoid_date.Visible = True
        cOrdervoid_date.ReadOnly = False

        cOrdervoid_desc.Name = "ordervoid_desc"
        cOrdervoid_desc.HeaderText = "ordervoid_desc"
        cOrdervoid_desc.DataPropertyName = "ordervoid_desc"
        cOrdervoid_desc.Width = 100
        cOrdervoid_desc.Visible = True
        cOrdervoid_desc.ReadOnly = False

        cOrder_id.Name = "order_id"
        cOrder_id.HeaderText = "order_id"
        cOrder_id.DataPropertyName = "order_id"
        cOrder_id.Width = 100
        cOrder_id.Visible = True
        cOrder_id.ReadOnly = False

        cOrdervoid_createby.Name = "ordervoid_createby"
        cOrdervoid_createby.HeaderText = "ordervoid_createby"
        cOrdervoid_createby.DataPropertyName = "ordervoid_createby"
        cOrdervoid_createby.Width = 100
        cOrdervoid_createby.Visible = True
        cOrdervoid_createby.ReadOnly = False

        cOrdervoid_createdt.Name = "ordervoid_createdt"
        cOrdervoid_createdt.HeaderText = "ordervoid_createdt"
        cOrdervoid_createdt.DataPropertyName = "ordervoid_createdt"
        cOrdervoid_createdt.Width = 100
        cOrdervoid_createdt.Visible = True
        cOrdervoid_createdt.ReadOnly = False

        cOrdervoid_modifiedby.Name = "ordervoid_modifiedby"
        cOrdervoid_modifiedby.HeaderText = "ordervoid_modifiedby"
        cOrdervoid_modifiedby.DataPropertyName = "ordervoid_modifiedby"
        cOrdervoid_modifiedby.Width = 100
        cOrdervoid_modifiedby.Visible = True
        cOrdervoid_modifiedby.ReadOnly = False

        cOrdervoid_modifieddt.Name = "ordervoid_modifieddt"
        cOrdervoid_modifieddt.HeaderText = "ordervoid_modifieddt"
        cOrdervoid_modifieddt.DataPropertyName = "ordervoid_modifieddt"
        cOrdervoid_modifieddt.Width = 100
        cOrdervoid_modifieddt.Visible = True
        cOrdervoid_modifieddt.ReadOnly = False

        cOrdervoid_approved1.Name = "ordervoid_approved1"
        cOrdervoid_approved1.HeaderText = "ordervoid_approved1"
        cOrdervoid_approved1.DataPropertyName = "ordervoid_approved1"
        cOrdervoid_approved1.Width = 100
        cOrdervoid_approved1.Visible = True
        cOrdervoid_approved1.ReadOnly = False

        cOrdervoid_approved1by.Name = "ordervoid_approved1by"
        cOrdervoid_approved1by.HeaderText = "ordervoid_approved1by"
        cOrdervoid_approved1by.DataPropertyName = "ordervoid_approved1by"
        cOrdervoid_approved1by.Width = 100
        cOrdervoid_approved1by.Visible = True
        cOrdervoid_approved1by.ReadOnly = False

        cOrdervoid_approved1dt.Name = "ordervoid_approved1dt"
        cOrdervoid_approved1dt.HeaderText = "ordervoid_approved1dt"
        cOrdervoid_approved1dt.DataPropertyName = "ordervoid_approved1dt"
        cOrdervoid_approved1dt.Width = 100
        cOrdervoid_approved1dt.Visible = True
        cOrdervoid_approved1dt.ReadOnly = False

        cOrdervoid_approved2.Name = "ordervoid_approved2"
        cOrdervoid_approved2.HeaderText = "ordervoid_approved2"
        cOrdervoid_approved2.DataPropertyName = "ordervoid_approved2"
        cOrdervoid_approved2.Width = 100
        cOrdervoid_approved2.Visible = True
        cOrdervoid_approved2.ReadOnly = False

        cOrdervoid_approved2by.Name = "ordervoid_approved2by"
        cOrdervoid_approved2by.HeaderText = "ordervoid_approved2by"
        cOrdervoid_approved2by.DataPropertyName = "ordervoid_approved2by"
        cOrdervoid_approved2by.Width = 100
        cOrdervoid_approved2by.Visible = True
        cOrdervoid_approved2by.ReadOnly = False

        cOrdervoid_approved2dt.Name = "ordervoid_approved2dt"
        cOrdervoid_approved2dt.HeaderText = "ordervoid_approved2dt"
        cOrdervoid_approved2dt.DataPropertyName = "ordervoid_approved2dt"
        cOrdervoid_approved2dt.Width = 100
        cOrdervoid_approved2dt.Visible = True
        cOrdervoid_approved2dt.ReadOnly = False

        cOrdervoid_approved3.Name = "ordervoid_approved3"
        cOrdervoid_approved3.HeaderText = "ordervoid_approved3"
        cOrdervoid_approved3.DataPropertyName = "ordervoid_approved3"
        cOrdervoid_approved3.Width = 100
        cOrdervoid_approved3.Visible = True
        cOrdervoid_approved3.ReadOnly = False

        cOrdervoid_approved3by.Name = "ordervoid_approved3by"
        cOrdervoid_approved3by.HeaderText = "ordervoid_approved3by"
        cOrdervoid_approved3by.DataPropertyName = "ordervoid_approved3by"
        cOrdervoid_approved3by.Width = 100
        cOrdervoid_approved3by.Visible = True
        cOrdervoid_approved3by.ReadOnly = False

        cOrdervoid_approved3dt.Name = "ordervoid_approved3dt"
        cOrdervoid_approved3dt.HeaderText = "ordervoid_approved3dt"
        cOrdervoid_approved3dt.DataPropertyName = "ordervoid_approved3dt"
        cOrdervoid_approved3dt.Width = 100
        cOrdervoid_approved3dt.Visible = True
        cOrdervoid_approved3dt.ReadOnly = False

        cOrdervoid_approvedproc.Name = "ordervoid_approvedproc"
        cOrdervoid_approvedproc.HeaderText = "ordervoid_approvedproc"
        cOrdervoid_approvedproc.DataPropertyName = "ordervoid_approvedproc"
        cOrdervoid_approvedproc.Width = 100
        cOrdervoid_approvedproc.Visible = True
        cOrdervoid_approvedproc.ReadOnly = False

        cOrdervoid_approvedprocby.Name = "ordervoid_approvedprocby"
        cOrdervoid_approvedprocby.HeaderText = "ordervoid_approvedprocby"
        cOrdervoid_approvedprocby.DataPropertyName = "ordervoid_approvedprocby"
        cOrdervoid_approvedprocby.Width = 100
        cOrdervoid_approvedprocby.Visible = True
        cOrdervoid_approvedprocby.ReadOnly = False

        cOrdervoid_approvedprocdt.Name = "ordervoid_approvedprocdt"
        cOrdervoid_approvedprocdt.HeaderText = "ordervoid_approvedprocdt"
        cOrdervoid_approvedprocdt.DataPropertyName = "ordervoid_approvedprocdt"
        cOrdervoid_approvedprocdt.Width = 100
        cOrdervoid_approvedprocdt.Visible = True
        cOrdervoid_approvedprocdt.ReadOnly = False

        cOrdervoid_cancaled.Name = "ordervoid_cancaled"
        cOrdervoid_cancaled.HeaderText = "ordervoid_cancaled"
        cOrdervoid_cancaled.DataPropertyName = "ordervoid_cancaled"
        cOrdervoid_cancaled.Width = 100
        cOrdervoid_cancaled.Visible = True
        cOrdervoid_cancaled.ReadOnly = False

        cOrdervoid_cancaledby.Name = "ordervoid_cancaledby"
        cOrdervoid_cancaledby.HeaderText = "ordervoid_cancaledby"
        cOrdervoid_cancaledby.DataPropertyName = "ordervoid_cancaledby"
        cOrdervoid_cancaledby.Width = 100
        cOrdervoid_cancaledby.Visible = True
        cOrdervoid_cancaledby.ReadOnly = False

        cOrdervoid_cancaleddt.Name = "ordervoid_cancaleddt"
        cOrdervoid_cancaleddt.HeaderText = "ordervoid_cancaleddt"
        cOrdervoid_cancaleddt.DataPropertyName = "ordervoid_cancaleddt"
        cOrdervoid_cancaleddt.Width = 100
        cOrdervoid_cancaleddt.Visible = True
        cOrdervoid_cancaleddt.ReadOnly = False

        objDgv.Columns.Clear()
        objDgv.Columns.AddRange(New System.Windows.Forms.DataGridViewColumn() _
        {cOrdervoid_id, cOrdervoid_date, cOrdervoid_desc, cOrder_id, cOrdervoid_createby, cOrdervoid_createdt, cOrdervoid_modifiedby, cOrdervoid_modifieddt, cOrdervoid_approved1, cOrdervoid_approved1by, cOrdervoid_approved1dt, cOrdervoid_approved2, cOrdervoid_approved2by, cOrdervoid_approved2dt, cOrdervoid_approved3, cOrdervoid_approved3by, cOrdervoid_approved3dt, cOrdervoid_approvedproc, cOrdervoid_approvedprocby, cOrdervoid_approvedprocdt, cOrdervoid_cancaled, cOrdervoid_cancaledby, cOrdervoid_cancaleddt})



        ' DgvTrnOrdervoid Behaviours: 
        objDgv.AllowUserToAddRows = False
        objDgv.AllowUserToDeleteRows = False
        objDgv.AllowUserToResizeRows = False
        objDgv.ReadOnly = True
        objDgv.SelectionMode = DataGridViewSelectionMode.FullRowSelect

    End Function

    Private Function InitLayoutUI() As Boolean

        Me.xtabmainmenu.Anchor = AnchorStyles.Bottom
        Me.xtabmainmenu.Anchor += AnchorStyles.Top
        Me.xtabmainmenu.Anchor += AnchorStyles.Right
        Me.xtabmainmenu.Anchor += AnchorStyles.Left

        Me.xtabmainmenu.TabPages.Item(1).BackColor = Color.Gainsboro
        Me.PnlDfSearch.Dock = DockStyle.Top
        Me.PnlDfSearch.Visible = False

        ' Me.DgvTrnOrdervoid.Dock = DockStyle.Fill

        ' Me.FormatDgvTrnOrdervoid(Me.DgvTrnOrdervoid)

    End Function

    Private Function BindingStop() As Boolean
        'stop binding
        Me.obj_Ordervoid_id.DataBindings.Clear()
        Me.obj_Ordervoid_desc.DataBindings.Clear()
        Me.obj_Order_id.DataBindings.Clear()
        Me.obj_Channelid.DataBindings.Clear()
        Me.obj_Ordervoid_createby.DataBindings.Clear()
        Me.obj_Ordervoid_createdt.DataBindings.Clear()
        Me.obj_Ordervoid_modifiedby.DataBindings.Clear()
        Me.obj_Ordervoid_modifieddt.DataBindings.Clear()
        Me.obj_Ordervoid_approved1.DataBindings.Clear()
        Me.obj_Ordervoid_approved1by.DataBindings.Clear()
        Me.obj_Ordervoid_approved1dt.DataBindings.Clear()
        Me.obj_Ordervoid_approved2.DataBindings.Clear()
        Me.obj_Ordervoid_approved2by.DataBindings.Clear()
        Me.obj_Ordervoid_approved2dt.DataBindings.Clear()
        Me.obj_Ordervoid_approved3.DataBindings.Clear()
        Me.obj_Ordervoid_approved3by.DataBindings.Clear()
        Me.obj_Ordervoid_approved3dt.DataBindings.Clear()
        Me.obj_Ordervoid_approvedproc.DataBindings.Clear()
        Me.obj_Ordervoid_approvedprocby.DataBindings.Clear()
        Me.obj_Ordervoid_approvedprocdt.DataBindings.Clear()
        Me.obj_Ordervoid_cancaled.DataBindings.Clear()
        Me.obj_Ordervoid_cancaledby.DataBindings.Clear()
        Me.obj_Ordervoid_cancaleddt.DataBindings.Clear()
        Return True
    End Function

    Private Function BindingStart() As Boolean
        'start binding
        Me.obj_Ordervoid_id.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_id"))
        Me.obj_Ordervoid_desc.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_desc"))
        Me.obj_Order_id.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "order_id"))
        Me.obj_Channelid.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "channel_id"))
        Me.obj_Ordervoid_createby.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_createby"))
        Me.obj_Ordervoid_createdt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_createdt"))
        Me.obj_Ordervoid_modifiedby.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_modifiedby"))
        Me.obj_Ordervoid_modifieddt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_modifieddt"))
        Me.obj_Ordervoid_approved1.DataBindings.Add(New Binding("Checked", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved1"))
        Me.obj_Ordervoid_approved1by.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved1by"))
        Me.obj_Ordervoid_approved1dt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved1dt"))
        Me.obj_Ordervoid_approved2.DataBindings.Add(New Binding("Checked", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved2"))
        Me.obj_Ordervoid_approved2by.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved2by"))
        Me.obj_Ordervoid_approved2dt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved2dt"))
        Me.obj_Ordervoid_approved3.DataBindings.Add(New Binding("Checked", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved3"))
        Me.obj_Ordervoid_approved3by.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved3by"))
        Me.obj_Ordervoid_approved3dt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approved3dt"))
        Me.obj_Ordervoid_approvedproc.DataBindings.Add(New Binding("Checked", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approvedproc"))
        Me.obj_Ordervoid_approvedprocby.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approvedprocby"))
        Me.obj_Ordervoid_approvedprocdt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_approvedprocdt"))
        Me.obj_Ordervoid_cancaled.DataBindings.Add(New Binding("Checked", Me.tbl_TrnOrdervoid_Temp, "ordervoid_cancaled"))
        Me.obj_Ordervoid_cancaledby.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_cancaledby"))
        Me.obj_Ordervoid_cancaleddt.DataBindings.Add(New Binding("Text", Me.tbl_TrnOrdervoid_Temp, "ordervoid_cancaleddt"))
        Return True
    End Function

#End Region

#Region " Dialoged Control "
#End Region


#Region " User Defined Function "

    Private Function uiOrderVoid_NewData() As Boolean
        'new data
        RaiseEvent FormBeforeNew()

        ' TODO: Set Default Value for tbl_TrnOrdervoid_Temp
        Me.tbl_TrnOrdervoid_Temp.Clear()
        Me.tbl_TrnOrdervoid_Temp.Columns("ordervoid_id").DefaultValue = 0
        Me.tbl_TrnOrdervoid_Temp.Columns("strukturunit_id").DefaultValue = _USERSTRUKTURUNIT


        Me.BindingContext(Me.tbl_TrnOrdervoid_Temp).EndCurrentEdit()
        Try
            Me.BindingContext(Me.tbl_TrnOrdervoid_Temp).AddNew()
            Me.obj_Channelid.EditValue = Me._CHANNEL
        Catch ex As Exception
            MessageBox.Show(ex.Source)
        End Try

    End Function

    Private Function uiOrderVoid_Retrieve() As Boolean
        'retrieve data
        Dim criteria As String = ""

        criteria = String.Format("strukturunit_id = '{0}' AND channel_id = '{1}'", Me._USERSTRUKTURUNIT, Me._CHANNEL)

        If Me._USERTYPE = "SPV" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}'", 1)
        End If

        If Me._USERTYPE = "KADEPT" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}' AND ordervoid_approved2 = '{1}'", 1, 1)
        End If

        If Me._USERTYPE = "PROC" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}' AND ordervoid_approved2 = '{1}' AND ordervoid_approved3 = '{1}'", 1, 1, 1)
        End If

        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim dbCmd As OleDb.OleDbCommand
        Dim dbDA As OleDb.OleDbDataAdapter
        Dim cookie As Byte() = Nothing

        dbCmd = New OleDb.OleDbCommand("ov_TrnOrdervoid_Select", dbConn)
        dbCmd.Parameters.Add("@username", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@username").Value = IIf(Me._USERTYPE = "STAFF", "", Me.UserName)
        dbCmd.Parameters.Add("@Criteria", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@Criteria").Value = criteria
        dbCmd.CommandType = CommandType.StoredProcedure
        dbDA = New OleDb.OleDbDataAdapter(dbCmd)
        Me.tbl_TrnOrdervoid.Clear()

        Try
            dbConn.Open()
            clsApplicationRole.SetAppRole(dbConn, cookie)
            Me.gcListOrderVoid.DataSource = Nothing
            dbDA.Fill(Me.tbl_TrnOrdervoid)
            Me.gcListOrderVoid.DataSource = Me.tbl_TrnOrdervoid
        Catch ex As Exception
            MsgBox(mUiName & ": uiOrderVoid_LoadData()" & vbCrLf & ex.Message)
        Finally
            If dbConn.State = ConnectionState.Open Then
                clsApplicationRole.UnsetAppRole(dbConn, cookie)
                dbConn.Close()
            End If
        End Try


    End Function

    Private Function uiOrderVoid_Save() As Boolean
        'save data
        Dim tbl_TrnOrdervoid_Temp_Changes As DataTable
        Dim success As Boolean
        Dim ordervoid_id As Object = New Object
        Dim i As Integer = 0
        Dim MasterDataState As System.Data.DataRowState
        Dim result As FormSaveResult
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim cookie As Byte() = Nothing

        Me.Cursor = Cursors.WaitCursor
        RaiseEvent FormBeforeSave(ordervoid_id)

        Me.BindingContext(Me.tbl_TrnOrdervoid_Temp).EndCurrentEdit()
        tbl_TrnOrdervoid_Temp_Changes = Me.tbl_TrnOrdervoid_Temp.GetChanges()

        If tbl_TrnOrdervoid_Temp_Changes IsNot Nothing Then
            Try
                dbConn.Open()
                clsApplicationRole.SetAppRole(dbConn, cookie)

                MasterDataState = tbl_TrnOrdervoid_Temp.Rows(0).RowState
                ordervoid_id = tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id")

                If tbl_TrnOrdervoid_Temp_Changes IsNot Nothing Then
                    success = Me.uiOrderVoid_SaveMaster(dbConn, ordervoid_id, tbl_TrnOrdervoid_Temp_Changes, MasterDataState)
                    If Not success Then Throw New Exception("Error: Saving Master Data at Me.uiOrderVoid_SaveMaster(tbl_TrnOrdervoid_Temp_Changes)")
                    Me.tbl_TrnOrdervoid_Temp.AcceptChanges()
                End If

                result = FormSaveResult.SaveSuccess
                If SHOW_SAVE_CONFIRMATION Then
                    MessageBox.Show("Data Saved", mUiName, MessageBoxButtons.OK, MessageBoxIcon.Information)
                End If

            Catch ex As Exception
                result = FormSaveResult.SaveError
                MessageBox.Show("Data Cannot Be Saved" & vbCrLf & ex.Message, mUiName, MessageBoxButtons.OK, MessageBoxIcon.Error)
            Finally
                If dbConn.State = ConnectionState.Open Then
                    clsApplicationRole.UnsetAppRole(dbConn, cookie)
                    dbConn.Close()
                End If
            End Try

        Else
            result = FormSaveResult.Nochanges
            If SHOW_SAVE_CONFIRMATION Then
                MessageBox.Show("All changes has been saved", mUiName, MessageBoxButtons.OK, MessageBoxIcon.Information)
            End If
        End If

        RaiseEvent FormAfterSave(ordervoid_id, result)
        Me.Cursor = Cursors.Arrow

    End Function

    Private Function uiOrderVoid_SaveMaster(ByVal dbConn As OleDb.OleDbConnection, ByRef ordervoid_id As Object, ByVal objTbl As DataTable, ByVal MasterDataState As System.Data.DataRowState) As Boolean
        Dim dbCmdInsert As OleDb.OleDbCommand
        Dim dbCmdUpdate As OleDb.OleDbCommand
        Dim dbDA As OleDb.OleDbDataAdapter
        Dim curpos As Integer

        ' Save data: transaksi_ordervoid
        dbCmdInsert = New OleDb.OleDbCommand("ov_TrnOrdervoid_Insert", dbConn)
        dbCmdInsert.CommandType = CommandType.StoredProcedure
        dbCmdInsert.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_id", System.Data.OleDb.OleDbType.VarWChar, 24, "ordervoid_id"))
        dbCmdInsert.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_desc", System.Data.OleDb.OleDbType.VarWChar, 255, "ordervoid_desc"))
        dbCmdInsert.Parameters.Add(New System.Data.OleDb.OleDbParameter("@order_id", System.Data.OleDb.OleDbType.VarWChar, 30, "order_id"))
        dbCmdInsert.Parameters.Add(New System.Data.OleDb.OleDbParameter("@strukturunit_id", System.Data.OleDb.OleDbType.Decimal, 15, "strukturunit_id"))
        dbCmdInsert.Parameters.Add(New System.Data.OleDb.OleDbParameter("@channel_id", System.Data.OleDb.OleDbType.VarWChar, 30, "channel_id"))

        dbCmdUpdate = New OleDb.OleDbCommand("ov_TrnOrdervoid_Update", dbConn)
        dbCmdUpdate.CommandType = CommandType.StoredProcedure
        dbCmdUpdate.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_id", System.Data.OleDb.OleDbType.VarWChar, 24, "ordervoid_id"))
        dbCmdUpdate.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_desc", System.Data.OleDb.OleDbType.VarWChar, 255, "ordervoid_desc"))
        dbCmdUpdate.Parameters.Add(New System.Data.OleDb.OleDbParameter("@order_id", System.Data.OleDb.OleDbType.VarWChar, 30, "order_id"))
        dbCmdUpdate.Parameters.Add(New System.Data.OleDb.OleDbParameter("@strukturunit_id", System.Data.OleDb.OleDbType.Decimal, 15, "strukturunit_id"))
        dbCmdUpdate.Parameters.Add(New System.Data.OleDb.OleDbParameter("@channel_id", System.Data.OleDb.OleDbType.VarWChar, 30, "channel_id"))

        dbDA = New OleDb.OleDbDataAdapter
        dbDA.UpdateCommand = dbCmdUpdate
        dbDA.InsertCommand = dbCmdInsert


        Try
            dbDA.Update(objTbl)

            ordervoid_id = objTbl.Rows(0).Item("ordervoid_id")
            Me.tbl_TrnOrdervoid_Temp.Clear()
            Me.tbl_TrnOrdervoid_Temp.Merge(objTbl)

        Catch ex As Data.OleDb.OleDbException
            MessageBox.Show(ex.Message, "OLE DB Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Return False
        Catch ex As Exception
            MessageBox.Show(ex.Message)
            Return False
        End Try


        If MasterDataState = DataRowState.Added Then
            Me.tbl_TrnOrdervoid.Merge(objTbl)
        ElseIf MasterDataState = DataRowState.Modified Then
            curpos = Me.BindingContext(Me.tbl_TrnOrdervoid).Position
            Me.tbl_TrnOrdervoid.Rows.RemoveAt(curpos)
            Me.tbl_TrnOrdervoid.Merge(objTbl)
        End If

        Me.BindingContext(Me.tbl_TrnOrdervoid).Position = Me.BindingContext(Me.tbl_TrnOrdervoid).Count

        Return True
    End Function

    Private Function uiOrderVoid_Print() As Boolean
        'print data
    End Function

    Private Function uiOrderVoid_Delete() As Boolean
        Dim res As String = ""
        Dim ordervoid_id As Object = New Object

        Me.Cursor = Cursors.WaitCursor
        RaiseEvent FormBeforeDelete(ordervoid_id)

        If Me.gvListVoidOrder.GetFocusedRow IsNot Nothing Then

            res = MessageBox.Show("Are you sure want to cancel data ?", mUiName, MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If res = DialogResult.Yes Then
                Me.uiOrderVoid_DeleteRow(Me.gvListVoidOrder.FocusedRowHandle)
            End If

        End If

        RaiseEvent FormAfterDelete(ordervoid_id)
        Me.Cursor = Cursors.Arrow

    End Function

    Private Function uiOrderVoid_DeleteRow(ByVal rowIndex As Integer) As Boolean
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim dbCmdDelete As OleDb.OleDbCommand
        Dim ordervoid_id As String
        Dim NewRowIndex As Integer

        ordervoid_id = Me.gvListVoidOrder.GetFocusedRowCellValue("ordervoid_id") ' Me.DgvTrnOrdervoid.Rows(rowIndex).Cells("ordervoid_id").Value

        dbCmdDelete = New OleDb.OleDbCommand("ov_TrnOrdervoid_Delete", dbConn)
        dbCmdDelete.CommandType = CommandType.StoredProcedure
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_id", System.Data.OleDb.OleDbType.VarWChar, 24))
        dbCmdDelete.Parameters("@ordervoid_id").Value = ordervoid_id
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_date", System.Data.OleDb.OleDbType.Date, 8))
        dbCmdDelete.Parameters("@ordervoid_date").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_desc", System.Data.OleDb.OleDbType.VarWChar, 255))
        dbCmdDelete.Parameters("@ordervoid_desc").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@order_id", System.Data.OleDb.OleDbType.VarWChar, 30))
        dbCmdDelete.Parameters("@order_id").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_createby", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_createby").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_createdt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_createdt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_modifiedby", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_modifiedby").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_modifieddt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_modifieddt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved1", System.Data.OleDb.OleDbType.Integer, 4))
        dbCmdDelete.Parameters("@ordervoid_approved1").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved1by", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_approved1by").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved1dt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_approved1dt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved2", System.Data.OleDb.OleDbType.Integer, 4))
        dbCmdDelete.Parameters("@ordervoid_approved2").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved2by", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_approved2by").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved2dt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_approved2dt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved3", System.Data.OleDb.OleDbType.Integer, 4))
        dbCmdDelete.Parameters("@ordervoid_approved3").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved3by", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_approved3by").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approved3dt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_approved3dt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approvedproc", System.Data.OleDb.OleDbType.Integer, 4))
        dbCmdDelete.Parameters("@ordervoid_approvedproc").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approvedprocby", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_approvedprocby").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_approvedprocdt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_approvedprocdt").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_cancaled", System.Data.OleDb.OleDbType.Integer, 4))
        dbCmdDelete.Parameters("@ordervoid_cancaled").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_cancaledby", System.Data.OleDb.OleDbType.VarWChar, 100))
        dbCmdDelete.Parameters("@ordervoid_cancaledby").Value = DBNull.Value
        dbCmdDelete.Parameters.Add(New System.Data.OleDb.OleDbParameter("@ordervoid_cancaleddt", System.Data.OleDb.OleDbType.DBTimeStamp, 8))
        dbCmdDelete.Parameters("@ordervoid_cancaleddt").Value = DBNull.Value

        Try
            dbConn.Open()
            dbCmdDelete.ExecuteNonQuery()

            If Me.gvListVoidOrder.RowCount > 1 Then

                If rowIndex = 0 Then
                    NewRowIndex = rowIndex + 1
                    Me.uiOrderVoid_OpenRow(NewRowIndex)
                    Me.tbl_TrnOrdervoid.Rows.RemoveAt(rowIndex)
                ElseIf rowIndex = Me.gvListVoidOrder.RowCount - 1 Then
                    NewRowIndex = rowIndex - 1
                    Me.uiOrderVoid_OpenRow(NewRowIndex)
                    Me.tbl_TrnOrdervoid.Rows.RemoveAt(rowIndex)
                Else
                    Me.tbl_TrnOrdervoid.Rows.RemoveAt(rowIndex)
                    Me.uiOrderVoid_OpenRow(rowIndex)
                End If

            Else

                Me.tbl_TrnOrdervoid_Temp.Clear()
                Me.tbl_TrnOrdervoid.Rows.RemoveAt(rowIndex)

            End If

        Catch ex As Data.OleDb.OleDbException
            MessageBox.Show(ex.Message, "OLE DB Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Exit Function
        Catch ex As Exception
            MessageBox.Show(ex.Message)
            Exit Function
        Finally
            dbConn.Close()
        End Try
    End Function

    Private Function uiOrderVoid_OpenRow(ByVal rowIndex As Integer) As Boolean
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim cookie As Byte() = Nothing
        Dim ordervoid_id As String

        ordervoid_id = Me.gvListVoidOrder.GetFocusedRowCellValue("ordervoid_id") ' Me.DgvTrnOrdervoid.Rows(rowIndex).Cells("ordervoid_id").Value

        Me.Cursor = Cursors.WaitCursor
        RaiseEvent FormBeforeOpenRow(ordervoid_id)


        Try
            dbConn.Open()
            clsApplicationRole.SetAppRole(dbConn, cookie)
            Me.uiOrderVoid_OpenRowMaster(ordervoid_id, dbConn)

            If tbl_TrnOrdervoid_Temp.Rows.Count <= 0 Then
                MsgBox("Data is empty!!")
                xtabmainmenu.SelectedTabPageIndex = 0
            End If

            If Me._USERTYPE = "STAFF" Then
                If Me.obj_Ordervoid_id.EditValue <> "" Then
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                        Me.tbtnSave.Enabled = False
                        Me.tbtnDel.Enabled = False
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.btndata_browseorderid.Enabled = False
                    Else
                        If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1") = 1 Then
                            Me.tbtnSave.Enabled = False
                            Me.tbtnDel.Enabled = False
                            Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                            Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                            Me.btndata_browseorderid.Enabled = False
                        Else
                            Me.tbtnSave.Enabled = True
                            Me.tbtnDel.Enabled = True
                            Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                            Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                            Me.btndata_browseorderid.Enabled = True
                        End If
                    End If
                Else
                    Me.tbtnSave.Enabled = True
                    Me.tbtnDel.Enabled = True
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.btndata_browseorderid.Enabled = True
                End If
            End If

            If Me._USERTYPE = "SPV" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved2") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If

                Me.btndata_browseorderid.Enabled = False
            End If

            If Me._USERTYPE = "KADEPT" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved3") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If

                Me.btndata_browseorderid.Enabled = False
            End If

            If Me._USERTYPE = "PROC" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approvedproc") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If

                Me.btndata_browseorderid.Enabled = False
            End If


        Catch ex As Exception
            MessageBox.Show(ex.Message, mUiName & ": uiOrderVoid_OpenRow()", MessageBoxButtons.OK, MessageBoxIcon.Error)
        Finally
            If dbConn.State = ConnectionState.Open Then
                clsApplicationRole.UnsetAppRole(dbConn, cookie)
                dbConn.Close()
            End If

        End Try

        RaiseEvent FormAfterOpenRow(ordervoid_id)
        Me.Cursor = Cursors.Arrow

        Return True

    End Function

    Private Function uiOrderVoid_OpenRowMaster(ByVal ordervoid_id As String, ByVal dbConn As OleDb.OleDbConnection) As Boolean
        Dim dbCmd As OleDb.OleDbCommand
        Dim dbDA As OleDb.OleDbDataAdapter
        Dim criteria As String = String.Format("ordervoid_id='{0}'", ordervoid_id)

        If Me._USERTYPE = "SPV" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}'", 1)
        End If

        If Me._USERTYPE = "KADEPT" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}' AND ordervoid_approved2 = '{1}'", 1, 1)
        End If

        If Me._USERTYPE = "PROC" Then
            criteria = criteria + String.Format("AND ordervoid_approved1 = '{0}' AND ordervoid_approved2 = '{1}' AND ordervoid_approved3 = '{1}'", 1, 1, 1)
        End If


        dbCmd = New OleDb.OleDbCommand("ov_TrnOrdervoid_Select", dbConn)
        dbCmd.Parameters.Add("@username", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@username").Value = ""
        dbCmd.Parameters.Add("@Criteria", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@Criteria").Value = criteria
        dbCmd.CommandType = CommandType.StoredProcedure
        dbDA = New OleDb.OleDbDataAdapter(dbCmd)
        Me.tbl_TrnOrdervoid_Temp.Clear()

        Try
            Me.BindingStop()
            dbDA.Fill(Me.tbl_TrnOrdervoid_Temp)
            Me.BindingStart()
        Catch ex As Exception
            Throw New Exception(mUiName & ": uiOrderVoid_OpenRowMaster()" & vbCrLf & ex.Message)
        End Try

    End Function

    Private Function uiOrderVoid_First() As Boolean
        'goto first record found
        Dim move As Boolean
        Dim Message As String = "Data has been changed. " & vbCrLf & "Save data changes before move to first record ?"
        Dim iTab As Integer = Me.xtabmainmenu.SelectedTabPageIndex

        If iTab = 1 Then
            If Me.DATA_ISLOCKED Then
                move = True
            Else
                move = Me.uiOrderVoid_ConfirmSaveBeforeMove(Message)
            End If
        Else
            move = True
        End If

        If move Then
            'Me.DgvTrnOrdervoid.CurrentCell = Me.DgvTrnOrdervoid(1, 0)
            'Me.uiOrderVoid_RefreshPosition()
        End If
    End Function

    Private Function uiOrderVoid_Prev() As Boolean
        'goto previous record found
        Dim move As Boolean
        Dim Message As String = "Data has been changed. " & vbCrLf & "Save data changes before move to previous record ?"
        Dim iTab As Integer = Me.xtabmainmenu.SelectedTabPageIndex

        If iTab = 1 Then
            If Me.DATA_ISLOCKED Then
                move = True
            Else
                move = Me.uiOrderVoid_ConfirmSaveBeforeMove(Message)
            End If
        Else
            move = True
        End If

        If move Then
            'If Me.DgvTrnOrdervoid.CurrentCell.RowIndex > 0 Then
            '    Me.DgvTrnOrdervoid.CurrentCell = Me.DgvTrnOrdervoid(1, DgvTrnOrdervoid.CurrentCell.RowIndex - 1)
            '    Me.uiOrderVoid_RefreshPosition()
            'End If
        End If
    End Function

    Private Function uiOrderVoid_Next() As Boolean
        'goto next record found
        Dim move As Boolean
        Dim Message As String = "Data has been changed. " & vbCrLf & "Save data changes before move to next record ?"
        Dim iTab As Integer = Me.xtabmainmenu.SelectedTabPageIndex
        If iTab = 1 Then
            If Me.DATA_ISLOCKED Then
                move = True
            Else
                move = Me.uiOrderVoid_ConfirmSaveBeforeMove(Message)
            End If
        Else
            move = True
        End If

        If move Then
            'If Me.DgvTrnOrdervoid.CurrentCell.RowIndex < Me.DgvTrnOrdervoid.Rows.Count - 1 Then
            '    Me.DgvTrnOrdervoid.CurrentCell = Me.DgvTrnOrdervoid(1, DgvTrnOrdervoid.CurrentCell.RowIndex + 1)
            '    Me.uiOrderVoid_RefreshPosition()
            'End If
        End If
    End Function

    Private Function uiOrderVoid_Last() As Boolean
        'goto last record found
        Dim move As Boolean
        Dim Message As String = "Data has been changed. " & vbCrLf & "Save data changes before move to next record ?"
        Dim iTab As Integer = Me.xtabmainmenu.SelectedTabPageIndex

        If iTab = 1 Then
            If Me.DATA_ISLOCKED Then
                move = True
            Else
                move = Me.uiOrderVoid_ConfirmSaveBeforeMove(Message)
            End If
        Else
            move = True
        End If

        If move Then
            'Me.DgvTrnOrdervoid.CurrentCell = Me.DgvTrnOrdervoid(1, Me.DgvTrnOrdervoid.Rows.Count - 1)
            'Me.uiOrderVoid_RefreshPosition()
        End If
    End Function

    Private Function uiOrderVoid_RefreshPosition() As Boolean
        'refresh position
        Dim iTab As Integer = Me.xtabmainmenu.SelectedTabPageIndex
        If iTab = 1 Then uiOrderVoid_OpenRow(Me.gvListVoidOrder.FocusedRowHandle)
    End Function

    Private Function uiOrderVoid_ConfirmSaveBeforeMove(ByVal Message As String) As Boolean
        'confirm saving data changes before move
        Dim tbl_TrnOrdervoid_Temp_Changes As DataTable
        Dim res As System.Windows.Forms.DialogResult
        Dim success As Boolean
        Dim i As Integer = 0
        Dim MasterDataState As System.Data.DataRowState
        Dim ordervoid_id As Object = New Object
        Dim move As Boolean = False
        Dim result As FormSaveResult
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim cookie As Byte() = Nothing

        If Me.gvListVoidOrder.GetFocusedRow IsNot Nothing Then

            Me.BindingContext(Me.tbl_TrnOrdervoid_Temp).EndCurrentEdit()
            tbl_TrnOrdervoid_Temp_Changes = Me.tbl_TrnOrdervoid_Temp.GetChanges()

            If tbl_TrnOrdervoid_Temp_Changes IsNot Nothing Then

                res = MessageBox.Show(Message, mUiName, MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question)
                Select Case res
                    Case DialogResult.Yes

                        RaiseEvent FormBeforeSave(ordervoid_id)

                        Try
                            dbConn.Open()
                            clsApplicationRole.SetAppRole(dbConn, cookie)

                            If tbl_TrnOrdervoid_Temp_Changes IsNot Nothing Then
                                success = Me.uiOrderVoid_SaveMaster(dbConn, ordervoid_id, tbl_TrnOrdervoid_Temp_Changes, MasterDataState)
                                If Not success Then Throw New Exception("Cannot Save Master Data")
                                Me.tbl_TrnOrdervoid_Temp.AcceptChanges()
                            End If

                            result = FormSaveResult.SaveSuccess
                            If SHOW_SAVE_CONFIRMATION Then
                                MessageBox.Show("Data Saved", mUiName, MessageBoxButtons.OK, MessageBoxIcon.Information)
                            End If

                        Catch ex As Exception
                            result = FormSaveResult.SaveError
                            MessageBox.Show(ex.Message & vbCrLf & "Data Cannot Be Saved", mUiName, MessageBoxButtons.OK, MessageBoxIcon.Error)
                        Finally
                            If dbConn.State = ConnectionState.Open Then
                                clsApplicationRole.UnsetAppRole(dbConn, cookie)
                                dbConn.Close()
                            End If
                        End Try

                        RaiseEvent FormAfterSave(ordervoid_id, result)

                    Case DialogResult.No
                        move = True
                    Case DialogResult.Cancel
                        move = False
                End Select
            Else
                move = True
            End If

        End If

        Return move

    End Function

    Private Function uiOrderVoid_FormError() As Boolean
        Try
            ' TODO: Cek Error disini
            ' objFormError.SetError()

            ' Throw New Exception("Error")
            If Me.obj_Order_id.EditValue = "" Then
                Throw New Exception("Order id must be fill !!")
            End If

            If Me.obj_Ordervoid_desc.EditValue = "" Then
                Throw New Exception("Description of Order Void must be fill !!")
            End If


        Catch ex As Exception
            MessageBox.Show(ex.Message, mUiName, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return True
        End Try
        Return False
    End Function

#End Region

    Public Sub Form_Load(ByVal sender As Object)
        Dim objParameters As Collection = New Collection
        Try
            If Me.Browser IsNot Nothing Then
                objParameters = Me.GetParameterCollection(Me.Parameter)
                Me._CHANNEL = Me.GetValueFromParameter(objParameters, "CHANNEL")
                Me._ORDER_SOURCE = Me.GetValueFromParameter(objParameters, "ORDER_SOURCE")
                Me._ORDERTYPE_ID = Me.GetValueFromParameter(objParameters, "ORDERTYPE_ID")
                Me._FORMMODE = Me.GetValueFromParameter(objParameters, "FORMMODE")
                Me._USERTYPE = Me.GetValueFromParameter(objParameters, "USERTYPE")
                Me.DataFill(Me.tbl_MstUser, "cq_MstUser_Select", String.Format("username = '{0}'", Me.UserName))
                Me._USERFULLNAME = Me.tbl_MstUser.Rows(0)("user_fullname")
                Me._USERSTRUKTURUNIT = Me.tbl_MstUser.Rows(0)("strukturunit_id")
                Me._WEB_PROGRAMID = Me.GetValueFromParameter(objParameters, "WEB_PROGRAMID")
            End If

            If (Me.Browser IsNot Nothing And MyBase.Name = _Name) Or (Me.Browser Is Nothing And Application.ProductName <> _ProductName) Then
                Me.BindingStop()
                Me.BindingStart()
                Me.uiOrderVoid_NewData()

                Me.gcListOrderVoid.DataSource = Me.tbl_TrnOrdervoid

                Me.tbtnNew.Enabled = True
                Me.tbtnSave.Enabled = False
                Me.tbtnDel.Enabled = False
                Me.tbtnLoad.Enabled = True
                Me.tbtnQuery.Enabled = True
                Me.tBtn_approve.Enabled = True
                Me.tBtn_Disapprove.Enabled = True
                Me.tbtnPrint.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Me.tbtnPrintPreview.Visibility = DevExpress.XtraBars.BarItemVisibility.Never

                If Me._USERTYPE = "STAFF" Then
                    Me.DataFill(Me.tbl_EmailBodyPathApproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_STAFFtoSPV"))
                    Me.DataFill(Me.tbl_EmailBodyPathUnapproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_STAFFUnapproved"))
                    Me.tbtnNew.Enabled = True
                    Me.tbtnSave.Enabled = False
                    Me.tbtnDel.Enabled = False
                    Me.tbtnLoad.Enabled = True
                    Me.tbtnQuery.Enabled = True
                    Me.tBtn_approve.Enabled = True
                    Me.tBtn_Disapprove.Enabled = True
                End If

                If Me._USERTYPE = "SPV" Then
                    Me.DataFill(Me.tbl_EmailBodyPathApproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_SPVtoAVP"))
                    Me.DataFill(Me.tbl_EmailBodyPathUnapproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_SPVUnapproved"))
                    Me.tbtnNew.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnSave.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnDel.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnLoad.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Me.tbtnQuery.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                End If

                If Me._USERTYPE = "KADEPT" Then
                    Me.DataFill(Me.tbl_EmailBodyPathApproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_AVPtoRelatedDept"))
                    Me.DataFill(Me.tbl_EmailBodyPathUnapproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_AVPUnapproved"))
                    Me.tbtnNew.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnSave.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnDel.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnLoad.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Me.tbtnQuery.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                End If

                If Me._USERTYPE = "PROC" Then
                    Me.DataFill(Me.tbl_EmailBodyPathApproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_ProcToUser"))
                    'Me.DataFill(Me.tbl_EmailBodyPathUnapproval, "ms_MstEmailBodyPath_Select", String.Format(" isdisabled = 0 AND id_type = 'VO' AND name = '{0}'", "VO_STAFFUnapproved"))
                    Me.tbtnNew.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnSave.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnDel.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tbtnLoad.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Me.tbtnQuery.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                End If
            End If

            Dim trueValue As Int64 = 1
            Dim falseValue As Int64 = 0
            chkapproved1.ValueChecked = trueValue
            chkapproved1.ValueUnchecked = falseValue

            chkapproved2.ValueChecked = trueValue
            chkapproved2.ValueUnchecked = falseValue

            chkapproved3.ValueChecked = trueValue
            chkapproved3.ValueUnchecked = falseValue

            chkapprovedproc.ValueChecked = trueValue
            chkapprovedproc.ValueUnchecked = falseValue
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub

    Private Sub uiOrderVoid_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        If Me.IsDevelopment = True Then Me.Form_Load(sender)
    End Sub

    Private Sub ftabMain_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles xtabmainmenu.SelectedPageChanged

        Select Case Me.xtabmainmenu.SelectedTabPageIndex
            Case 0
                Me.tbtnSave.Enabled = False
                Me.tbtnDel.Enabled = False
                Me.tbtnLoad.Enabled = True
                Me.tbtnQuery.Enabled = True
                Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Me.xtabmainmenu.TabPages.Item(0).BackColor = Color.White
                Me.xtabmainmenu.TabPages.Item(1).BackColor = Color.Gainsboro
            Case 1
                Me.tbtnSave.Enabled = True
                Me.tbtnDel.Enabled = True
                Me.tbtnLoad.Enabled = False
                Me.tbtnQuery.Enabled = False
                Me.xtabmainmenu.TabPages.Item(0).BackColor = Color.Gainsboro
                Me.xtabmainmenu.TabPages.Item(1).BackColor = Color.White

                If Me.gvListVoidOrder.GetFocusedRow IsNot Nothing Then
                    Me.uiOrderVoid_OpenRow(Me.gvListVoidOrder.FocusedRowHandle)
                Else
                    Me.uiOrderVoid_NewData()
                End If
        End Select
    End Sub

    Private Sub gvListVoidOrder_DoubleClick(sender As Object, e As EventArgs) Handles gvListVoidOrder.DoubleClick
        Dim ea As DXMouseEventArgs = TryCast(e, DXMouseEventArgs)
        Dim view As GridView = TryCast(sender, GridView)
        Dim info As GridHitInfo = view.CalcHitInfo(ea.Location)
        If info.InRow OrElse info.InRowCell Then
            If Me.gvListVoidOrder.GetFocusedRow IsNot Nothing Then
                Me.xtabmainmenu.SelectedTabPageIndex = 1
            End If
        End If
    End Sub

    Private Sub btndata_browseorderid_Click(sender As Object, e As EventArgs) Handles btndata_browseorderid.Click
        Dim dlg As xdlgSelectOrder = New xdlgSelectOrder(Me.DSNFrm)

        If dlg.ShowDialog() = DialogResult.OK Then
            'Dim row As DataRow = TryCast(dlg.gvSelectOrder.GetFocusedRow, DataRow)

            'If row IsNot Nothing Then
            Me.obj_Order_id.EditValue = dlg.gvSelectOrder.GetFocusedRowCellValue("order_id") 'row.Item("order_id")
            'End If
        Else
            Me.obj_Order_id.EditValue = String.Empty
        End If

    End Sub

    Public Function ExecuteApproval(ByVal _sConn As String,
                                    ByVal procedure As String,
                                    ByVal ordervoid_id As String,
                                    ByVal approve_method As String,
                                    ByVal recipients As String,
                                    ByVal copy_recipients As String,
                                    ByVal blind_copy_recipients As String,
                                    ByVal subject As String,
                                    ByVal body As String,
                                    Optional ByVal userappdestination As String = "") As Boolean
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(_sConn)
        Dim dbCmd As OleDb.OleDbCommand
        Dim cookie As Byte() = Nothing

        dbCmd = New OleDb.OleDbCommand(procedure, dbConn)

        dbCmd.Parameters.Add("@ordervoid_id", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@ordervoid_id").Value = ordervoid_id

        dbCmd.Parameters.Add("@approve_method", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@approve_method").Value = approve_method

        dbCmd.Parameters.Add("@recipients", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@recipients").Value = recipients

        dbCmd.Parameters.Add("@copy_recipients", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@copy_recipients").Value = copy_recipients

        dbCmd.Parameters.Add("@blind_copy_recipients", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@blind_copy_recipients").Value = blind_copy_recipients

        dbCmd.Parameters.Add("@subject", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@subject").Value = subject

        dbCmd.Parameters.Add("@body", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@body").Value = body

        'If userappdestination <> "" Then
        dbCmd.Parameters.Add("@userappdestination", Data.OleDb.OleDbType.VarChar)
        dbCmd.Parameters("@userappdestination").Value = userappdestination
        ' End If


        dbCmd.CommandType = CommandType.StoredProcedure

        Try
            dbConn.Open()
            clsApplicationRole.SetAppRole(dbConn, cookie)
            dbCmd.ExecuteNonQuery()

        Catch ex As Exception
            Throw ex
        Finally
            If dbConn.State = ConnectionState.Open Then
                clsApplicationRole.UnsetAppRole(dbConn, cookie)
                dbConn.Close()
            End If
        End Try

        Return True

    End Function

    Private Sub Approval()
        Dim subjectEmail As String = String.Empty
        Dim email_bodypath As String = String.Empty
        Dim emailTo As String = String.Empty
        Dim UserNameTo As String = String.Empty
        Dim emailCC As String = String.Empty
        Dim emailBCC As String = String.Empty

        If Me.obj_Order_id.EditValue = "" Then
            Exit Sub
        End If

        If Me._USERTYPE = "STAFF" Then
            Me.uiOrderVoid_Save()


            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_staff", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                Dim dlgChooseUserEmail As New dlgChooseUserEmail(Me.DSNFrm, Me._USERSTRUKTURUNIT, PositionType.Staff)
                Dim result As String
                result = dlgChooseUserEmail.OpenDialog(Me)

                If result <> String.Empty Then
                    Dim EmailKe As String() = result.Split(New Char() {"#"c})
                    Dim UserFullnameTo As String = EmailKe(0).ToString
                    emailTo = EmailKe(1).ToString
                    UserNameTo = EmailKe(2).ToString
                    emailCC = New clsMstUserEmail(Me.DSNFrm).SelectCheckIsDelegate(UserNameTo).Item("userdelegatedto_email").ToString()
                    If emailTo <> "" Then
                        Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved1", Me.obj_Ordervoid_id.EditValue, "APPROVE", emailTo, emailCC,
                                           emailBCC, subjectEmail, email_bodypath, UserNameTo)
                        uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                        MsgBox("Data has been Approved!")
                    End If
                End If
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        If Me._USERTYPE = "SPV" Then
            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_spv", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                Dim dlgChooseUserEmail As New dlgChooseUserEmail(Me.DSNFrm, Me._USERSTRUKTURUNIT, PositionType.Supervisor)
                Dim result As String
                result = dlgChooseUserEmail.OpenDialog(Me)

                If result <> String.Empty Then
                    Dim EmailKe As String() = result.Split(New Char() {"#"c})
                    Dim UserFullnameTo As String = EmailKe(0).ToString
                    emailTo = EmailKe(1).ToString
                    UserNameTo = EmailKe(2).ToString
                    emailCC = New clsMstUserEmail(Me.DSNFrm).SelectCheckIsDelegate(UserNameTo).Item("userdelegatedto_email").ToString()
                    If emailTo <> "" Then
                        Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved2", Me.obj_Ordervoid_id.EditValue, "APPROVE", emailTo, emailCC,
                                           emailBCC, subjectEmail, email_bodypath, UserNameTo)
                        uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                        MsgBox("Data has been Approved!")
                    End If
                End If
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        If Me._USERTYPE = "KADEPT" Then
            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_avp", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                Dim getStrukDeptRelated As Decimal = 0
                If Microsoft.VisualBasic.Left(Me.obj_Order_id.EditValue, 2) = "NO" Then
                    getStrukDeptRelated = clsUtil.skalar(String.Format("SELECT strukturunit_id FROM transaksi_order WHERE order_id = '{0}'", Me.obj_Order_id.EditValue), Me.DSNFrm)
                Else
                    getStrukDeptRelated = "5507"
                End If

                emailTo = clsUtil.IsDbNull(clsUtil.skalar(String.Format("SELECT costcenter_id FROM master_strukturunit WHERE strukturunit_id = '{0}'", getStrukDeptRelated), Me.DSNFrm), "")
                If emailTo <> "" Then
                    If MsgBox("Are you sure to approve the data?", MsgBoxStyle.YesNo + MsgBoxStyle.DefaultButton2, Me.mUiName) = MsgBoxResult.Yes Then
                        Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved3", Me.obj_Ordervoid_id.EditValue, "APPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
                        uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                        MsgBox("Data has been Approved!")
                    End If
                End If
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        If Me._USERTYPE = "PROC" Then
            If MsgBox("Are you sure you approve this data?" + Chr(13) + "Note : Data cannot be unapprove in the future.", MsgBoxStyle.YesNo + MsgBoxStyle.DefaultButton2) = MsgBoxResult.No Then
                uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                Exit Sub
            End If

            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_proc", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                emailTo = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1by").ToString).Item("user_email").ToString()
                emailCC = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved2by").ToString).Item("user_email").ToString()
                emailCC = emailCC + "; " + New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved3by").ToString).Item("user_email").ToString()
                If emailTo <> "" Then
                    Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_ApprovedProc", Me.obj_Ordervoid_id.EditValue, "APPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
                    uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                    MsgBox("Data has been Approved!")
                End If
            Catch ex As Exception
            MsgBox(ex.Message)
        End Try
        End If

    End Sub

    Private Sub Disapproval()
        Dim subjectEmail As String = String.Empty
        Dim email_bodypath As String = String.Empty
        Dim emailTo As String = String.Empty
        Dim UserNameTo As String = String.Empty
        Dim emailCC As String = String.Empty
        Dim emailBCC As String = String.Empty

        If Me.obj_Order_id.EditValue = "" Then
            Exit Sub
        End If

        If Me._USERTYPE = "STAFF" Then
            Try
                Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved1", Me.obj_Ordervoid_id.EditValue, "UNAPPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
                uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                MsgBox("Data has been Unapproved!")
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        If Me._USERTYPE = "SPV" Then
            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathUnapproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathUnapproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_spv", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                emailTo = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1by").ToString).Item("user_email").ToString()
                emailCC = New clsMstUserEmail(Me.DSNFrm).SelectCheckIsDelegate(UserNameTo).Item("userdelegatedto_email").ToString()

                If emailTo <> "" Then
                    Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved2", Me.obj_Ordervoid_id.EditValue, "UNAPPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
                    uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                    MsgBox("Data has been Unapproved!")
                End If
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        If Me._USERTYPE = "KADEPT" Then
            Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
                                    clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
            subjectEmail = Replace(Me.tbl_EmailBodyPathUnapproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
            email_bodypath = Replace(Me.tbl_EmailBodyPathUnapproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
            email_bodypath = Replace(email_bodypath, "@name_avp", Me._USERFULLNAME)

            email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
            email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

            Try
                emailTo = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved2by").ToString).Item("user_email").ToString()
                emailTo = emailTo + "; " + New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1by").ToString).Item("user_email").ToString()
                emailCC = New clsMstUserEmail(Me.DSNFrm).SelectCheckIsDelegate(UserNameTo).Item("userdelegatedto_email").ToString()

                If emailTo <> "" Then
                    Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved3", Me.obj_Ordervoid_id.EditValue, "UNAPPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
                    uiOrderVoid_OpenRow2(Me.obj_Ordervoid_id.EditValue)
                    MsgBox("Data has been Unapproved!")
                End If
            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        End If

        'If Me._USERTYPE = "PROC" Then
        '    Dim cEmailDetailRequest As String = String.Format("<tr><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{0}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{1}</td><td style='padding: px; text-align: left; border-bottom: 1px solid black;'>{2}</td></tr>", _
        '                            clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_id").ToString, " "), _
        '                            clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_desc").ToString, " "), _
        '                            clsUtil.IsDbNull(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("order_id").ToString, " "))
        '    subjectEmail = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_subject").ToString, "@ordervoid_id", Me.obj_Ordervoid_id.EditValue)
        '    email_bodypath = Replace(Me.tbl_EmailBodyPathApproval.Rows(0).Item("email_bodypath").ToString, "<!--data_detail-->", cEmailDetailRequest)
        '    email_bodypath = Replace(email_bodypath, "@name_avp", Me._USERFULLNAME)

        '    email_bodypath = Replace(email_bodypath, "<!--program_id-->", Me._WEB_PROGRAMID)
        '    email_bodypath = Replace(email_bodypath, "<!--ordervoid_id-->", clsUtil.IsDbNull(Me.obj_Ordervoid_id.EditValue, String.Empty))

        '    Try
        '        emailTo = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1by").ToString).Item("user_email").ToString()
        '        emailCC = New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved2by").ToString).Item("user_email").ToString()
        '        emailCC = emailCC + "; " + New clsMstUserEmail(Me.DSNFrm).Select(Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved3by").ToString).Item("user_email").ToString()
        '        If emailTo <> "" Then
        '            Me.ExecuteApproval(Me.DSNFrm, "ov_TrnOrdervoid_Approved3", Me.obj_Ordervoid_id.EditValue, "APPROVE", emailTo, emailCC, emailBCC, subjectEmail, email_bodypath)
        '            uiOrderVoid_OpenRow(gvListVoidOrder.FocusedRowHandle)
        '            MsgBox("Data has been Approved!")
        '        End If
        '    Catch ex As Exception
        '        MsgBox(ex.Message)
        '    End Try
        'End If

    End Sub

    Private Function uiOrderVoid_OpenRow2(ByVal ordervoid_id As String) As Boolean
        Dim dbConn As OleDb.OleDbConnection = New OleDb.OleDbConnection(Me.DSNFrm)
        Dim cookie As Byte() = Nothing
        Me.Cursor = Cursors.WaitCursor
        RaiseEvent FormBeforeOpenRow(ordervoid_id)


        Try
            dbConn.Open()
            clsApplicationRole.SetAppRole(dbConn, cookie)

            Me.uiOrderVoid_OpenRowMaster(ordervoid_id, dbConn)

            If tbl_TrnOrdervoid_Temp.Rows.Count <= 0 Then
                MsgBox("Data is empty!!")
                xtabmainmenu.SelectedTabPageIndex = 0
            End If

            If Me._USERTYPE = "STAFF" Then
                If Me.obj_Ordervoid_id.EditValue <> "" Then
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                        Me.tbtnSave.Enabled = False
                        Me.tbtnDel.Enabled = False
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.btndata_browseorderid.Enabled = False
                    Else
                        If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved1") = 1 Then
                            Me.tbtnSave.Enabled = False
                            Me.tbtnDel.Enabled = False
                            Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                            Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                            Me.btndata_browseorderid.Enabled = False
                        Else
                            Me.tbtnSave.Enabled = True
                            Me.tbtnDel.Enabled = True
                            Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                            Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                            Me.btndata_browseorderid.Enabled = True
                        End If
                    End If
                Else
                    Me.tbtnSave.Enabled = True
                    Me.tbtnDel.Enabled = True
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.btndata_browseorderid.Enabled = True
                End If
            End If

            If Me._USERTYPE = "SPV" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved2") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If
                Me.btndata_browseorderid.Enabled = False
            End If

            If Me._USERTYPE = "KADEPT" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approved3") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If
                Me.btndata_browseorderid.Enabled = False
            End If

            If Me._USERTYPE = "PROC" Then
                If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_canceled") = 1 Then
                    Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                Else
                    If Me.tbl_TrnOrdervoid_Temp.Rows(0).Item("ordervoid_approvedproc") = 1 Then
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    Else
                        Me.tBtn_approve.Visibility = DevExpress.XtraBars.BarItemVisibility.Always
                        Me.tBtn_Disapprove.Visibility = DevExpress.XtraBars.BarItemVisibility.Never
                    End If
                End If
                Me.btndata_browseorderid.Enabled = False
            End If
        Catch ex As Exception
            MessageBox.Show(ex.Message, mUiName & ": uiOrderVoid_OpenRow()", MessageBoxButtons.OK, MessageBoxIcon.Error)
        Finally
            If dbConn.State = ConnectionState.Open Then
                clsApplicationRole.UnsetAppRole(dbConn, cookie)
                dbConn.Close()
            End If
        End Try

        RaiseEvent FormAfterOpenRow(ordervoid_id)
        Me.Cursor = Cursors.Arrow

        Return True

    End Function
End Class